# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Department {
  id: String
  name: String
  company: Company
  company_id: String
  manager: User
  manager_id: String
  supervisor: User
  supervisor_id: String
  department_users: [DepartmentUser!]
  created_at: DateTime
  updated_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DepartmentUser {
  id: String
  department_id: String
  department: Department
  user_id: String
  user: User
  created_at: DateTime
  updated_at: DateTime
}

type Company {
  id: String
  name: String
  short_name: String
  description: String
  location: String
  president: User
  president_id: String
  departments: [Department!]
  company_users: [CompanyUser!]
  created_at: DateTime
  updated_at: DateTime
}

type CompanyUser {
  id: String
  company_id: String
  company: Company
  user_id: String
  user: User
  created_at: DateTime
  updated_at: DateTime
}

type Note {
  id: String
  name: String
  description: String
  logs: String
  user_account_id: String
  user_account: UserAccount
  created_at: DateTime
  updated_at: DateTime
}

type Role {
  id: String
  name: String
  permissions: [Permission!]
  user_account_id: [String!]
  user_account: [UserAccount!]
  created_at: DateTime
  updated_at: DateTime
}

type Permission {
  id: String
  module: String
  view: Boolean
  add: Boolean
  edit: Boolean
  delete: Boolean
  verify: Boolean
  role_id: Boolean
  role: Role
  scope: String
  created_at: DateTime
  updated_at: DateTime
}

type Session {
  id: String
  access_token: String
  refresh_token: String
  reset_token: String
  isLoggedOut: Boolean
  expires_in: DateTime
  user_account_id: String
  user_account: UserAccount
  created_at: DateTime
  updated_at: DateTime
}

type UserAccount {
  id: String
  email: String
  username: String
  password: String
  user: User
  user_id: String
  role: [Role!]
  role_id: [String!]
  sessions: Session
  notes: [Note!]
  type: String
  provider: String
  providerAccountId: String
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  created_at: DateTime
  updated_at: DateTime
}

type User {
  id: String
  first_name: String
  middle_name: String
  last_name: String
  email: String
  position: String
  phone_number: String
  emailVerified: DateTime
  image: String
  companies: [CompanyUser!]
  departments: [DepartmentUser!]
  company_president: [Company!]
  user_account: UserAccount
  department_manager: [Department!]
  department_supervisor: [Department!]
  created_at: DateTime
  updated_at: DateTime
}

type Item {
  id: String
  name: String
  description: String
  quantity: Float
  price: Float
  total_price: Float
  unit_of_measurement_id: String
  item_category_id: String
  supplier_id: String
  requestion_forms_id: String
  item_status: String
  created_at: DateTime
  updated_at: DateTime
}

type ItemCategory {
  id: String
  name: String
  description: String
  user_approval_id: String
  user_approval: User
  created_at: DateTime
  updated_at: DateTime
}

type ApprovalUser {
  id: String
  level: Int
  approver_id: String
  item_category_id: String
  item_category: ItemCategory
  approval_id: String
  approval: Approval
  created_at: DateTime
  updated_at: DateTime
}

type Approval {
  id: String
  name: String
  description: String
  user_approval_id: String
  user_approval: ApprovalUser
  requestion_forms: [RequestForm!]
  created_at: DateTime
  updated_at: DateTime
}

type CheckOutRequestForm {
  id: String
  requestion_forms_id: String
  requestion_forms: RequestForm
  created_at: DateTime
  updated_at: DateTime
}

type RequestForm {
  id: String
  name: String
  description: String
  user_id: String
  requester: User
  items: [Item!]
  approval_id: String
  approval: Approval
  status: String
  requestForm_category_id: String
  requestForm_category: RequestionFormCategory
  notes: [Note!]
  CheckOutRequestForm: CheckOutRequestForm
  isVerified: Boolean
  created_at: DateTime
  updated_at: DateTime
}

type RequestionFormCategory {
  id: String
  name: String
  short_name: String
  requestion_forms: [RequestForm!]
  user_verifier_id: String
  user_verifier: User
  created_at: DateTime
  updated_at: DateTime
}

type Supplier {
  id: String
  name: String
  address: String
  contact_person: String
  contact_number: String
  email: String
  created_at: DateTime
  updated_at: DateTime
}

type UnitOfMeasurement {
  id: String
  name: String
  symbol: String
  base_unit: String
  conversion_factor: Int
  resutl_unit: String
  items: [Item!]
  created_at: DateTime
  updated_at: DateTime
}

type Query {
  users: [User!]!
  user(email: String!): User!
  userId(userId: String!): User!
  companies(currentUserId: String!): [Company!]!
  company(id: String!): Company!
  departments(currentUserId: String!): [Department!]!
  department(id: String!): Department!
  roles: [Role!]!
  role(id: String!): Role!
  session(id: String!): Session!
  userAccount(id: String!): UserAccount!
  verifyEmail(token: String!): UserAccount!
  resetPassword(email: String!): String!
  notes: [Note!]!
  note(id: String!): Note!
  requestionFormCategory(id: String!): RequestionFormCategory!
  suppliers: [Supplier!]!
  supplier(id: String!): Supplier!
  itemCategories: [ItemCategory!]!
  itemCategory(id: String!): ItemCategory!
  unitOfMeasurements: [UnitOfMeasurement!]!
  unitOfMeasurement(id: String!): UnitOfMeasurement!
  approvals: [Approval!]!
  approval(id: String!): Approval!
  approvalUser(id: String!): ApprovalUser!
  checkOutRequestForms: [CheckOutRequestForm!]!
  checkOutRequestForm(id: String!): CheckOutRequestForm!
  requestForms: [RequestForm!]!
  requestForm(id: String!): RequestForm!
  item(id: String!): Item!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createCompany(currentUserId: String!, createCompanyInput: CreateCompanyInput!): Company!
  updateCompany(currentUserId: String!, updateCompanyInput: UpdateCompanyInput!): Company!
  removeCompany(currentUserId: String!, id: String!): Company!
  createDepartment(currentUserId: String!, createDepartmentInput: CreateDepartmentInput!): Department!
  updateDepartment(currentUserId: String!, updateDepartmentInput: UpdateDepartmentInput!): Department!
  removeDepartment(currentUserId: String!, id: String!): Department!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  removeRole(id: String!): Role!
  createSession(createSessionInput: CreateSessionInput!): Session!
  updateSession(updateSessionInput: UpdateSessionInput!): Session!
  removeSession(id: String!): Session!
  login(loginUserAccountInput: LoginUserAccountInput!): Session!
  refreshToken: Session!
  logout: Session!
  updateUserAccoutPassword(changePasswordInput: ChangePasswordInput!, currentUserid: String!): UserAccount!
  changePassword(changePasswordInput: ChangePasswordInput!, currentUserid: String!): UserAccount!
  createNote(createNoteInput: CreateNoteInput!): Note!
  updateNote(updateNoteInput: UpdateNoteInput!): Note!
  removeNote(id: String!): Note!
  createRequestionFormCategory(createRequestionFormCategoryInput: CreateRequestionFormCategoryInput!): RequestionFormCategory!
  updateRequestionFormCategory(updateRequestionFormCategoryInput: UpdateRequestionFormCategoryInput!): RequestionFormCategory!
  removeRequestionFormCategory(id: String!): RequestionFormCategory!
  createSupplier(createSupplierInput: CreateSupplierInput!): Supplier!
  updateSupplier(updateSupplierInput: UpdateSupplierInput!): Supplier!
  removeSupplier(id: String!): Supplier!
  createItemCategory(createItemCategoryInput: CreateItemCategoryInput!): ItemCategory!
  updateItemCategory(updateItemCategoryInput: UpdateItemCategoryInput!): ItemCategory!
  removeItemCategory(id: String!): ItemCategory!
  createUnitOfMeasurement(createUnitOfMeasurementInput: CreateUnitOfMeasurementInput!): UnitOfMeasurement!
  updateUnitOfMeasurement(updateUnitOfMeasurementInput: UpdateUnitOfMeasurementInput!): UnitOfMeasurement!
  removeUnitOfMeasurement(id: String!): UnitOfMeasurement!
  createApproval(createApprovalInput: CreateApprovalInput!): Approval!
  updateApproval(updateApprovalInput: UpdateApprovalInput!): Approval!
  removeApproval(id: String!): Approval!
  createApprovalUser(createApprovalUserInput: CreateApprovalUserInput!): ApprovalUser!
  updateApprovalUser(updateApprovalUserInput: UpdateApprovalUserInput!): ApprovalUser!
  removeApprovalUser(id: String!): ApprovalUser!
  createCheckOutRequestForm(createCheckOutRequestFormInput: CreateCheckOutRequestFormInput!): CheckOutRequestForm!
  updateCheckOutRequestForm(updateCheckOutRequestFormInput: UpdateCheckOutRequestFormInput!): CheckOutRequestForm!
  removeCheckOutRequestForm(id: String!): CheckOutRequestForm!
  createRequestForm(createRequestFormInput: CreateRequestFormInput!): RequestForm!
  updateRequestForm(updateRequestFormInput: UpdateRequestFormInput!): RequestForm!
  removeRequestForm(id: String!): RequestForm!
  createItem(createItemInput: CreateItemInput!): Item!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  removeItem(id: String!): Item!
}

input CreateUserInput {
  id: String
  first_name: String
  middle_name: String
  last_name: String
  email: String
  phone_number: String
  position: String
  emailVerified: DateTime
  image: String
  companies: [CreateCompanyUserInput!]
  departments: [CreateDepartmentUserInput!]
  company_president: [CreateCompanyInput!]
  user_account: CreateUserAccountInput
  department_manager: [CreateDepartmentInput!]
  department_supervisor: [CreateDepartmentInput!]
  created_at: DateTime
  updated_at: DateTime
}

input CreateCompanyUserInput {
  id: String
  company_id: String
  company: CreateCompanyInput
  user_id: String
  user: CreateUserInput
  created_at: DateTime
  updated_at: DateTime
}

input CreateCompanyInput {
  id: String
  name: String
  short_name: String
  description: String
  location: String
  president: CreateUserInput
  president_id: String
  departments: [CreateDepartmentInput!]
  company_users: [CreateCompanyUserInput!]
  created_at: DateTime
  updated_at: DateTime
}

input CreateDepartmentInput {
  id: String
  name: String
  company: CreateCompanyInput
  company_id: String
  manager: CreateUserInput
  manager_id: String
  supervisor: CreateUserInput
  supervisor_id: String
  department_users: [CreateDepartmentUserInput!]
  created_at: DateTime
  updated_at: DateTime
}

input CreateDepartmentUserInput {
  id: String
  department_id: String
  department: CreateDepartmentInput
  user_id: String
  user: CreateUserInput
  created_at: DateTime
  updated_at: DateTime
}

input CreateUserAccountInput {
  id: String
  email: String
  username: String
  password: String
  confirm_password: String
  user_id: String
  user: CreateUserInput
  role: CreateRoleInput
  role_id: [String!]
  sessions: CreateSessionInput
  notes: [CreateNoteInput!]
  type: String
  provider: String
  providerAccountId: String
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  created_at: DateTime
  updated_at: DateTime
}

input CreateRoleInput {
  id: String
  name: String
  permissions: [CreatePermissionInput!]
  user_account_id: [String!]
  user_account: [CreateUserAccountInput!]
  created_at: DateTime
  updated_at: DateTime
}

input CreatePermissionInput {
  id: String
  module: String
  view: Boolean
  add: Boolean
  edit: Boolean
  delete: Boolean
  verify: Boolean
  role_id: String
  role: CreateRoleInput
  scope: String
  created_at: DateTime
  updated_at: DateTime
}

input CreateSessionInput {
  id: String
  access_token: String
  refresh_token: String
  reset_token: String
  isLoggedOut: Boolean
  expires_in: DateTime
  user_account_id: String
  user_account: CreateUserAccountInput
  created_at: DateTime
  updated_at: DateTime
}

input CreateNoteInput {
  id: String
  name: String
  description: String
  logs: String
  user_account_id: String
  user_account: CreateUserAccountInput
  requestion_forms_id: DateTime
  created_at: DateTime
  updated_at: DateTime
}

input UpdateUserInput {
  """The id of the user"""
  id: String!
  first_name: String
  middle_name: String
  last_name: String
  email: String
  phone_number: String
  position: String
  emailVerified: DateTime
  image: String
  companies: [CreateCompanyUserInput!]
  departments: [CreateDepartmentUserInput!]
  company_president: [CreateCompanyInput!]
  user_account: CreateUserAccountInput
  department_manager: [CreateDepartmentInput!]
  department_supervisor: [CreateDepartmentInput!]
  created_at: DateTime
  updated_at: DateTime
}

input UpdateCompanyInput {
  id: String
  name: String
  short_name: String
  description: String
  location: String
  president: CreateUserInput
  president_id: String
  departments: [CreateDepartmentInput!]
  company_users: [CreateCompanyUserInput!]
  created_at: DateTime
  updated_at: DateTime
}

input UpdateDepartmentInput {
  id: String!
  name: String
  company: CreateCompanyInput
  company_id: String
  manager: CreateUserInput
  manager_id: String
  supervisor: CreateUserInput
  supervisor_id: String
  department_users: [CreateDepartmentUserInput!]
  created_at: DateTime
  updated_at: DateTime
}

input UpdateRoleInput {
  id: String
  name: String
  permissions: [CreatePermissionInput!]
  user_account_id: [String!]
  user_account: [CreateUserAccountInput!]
  created_at: DateTime
  updated_at: DateTime
}

input UpdateSessionInput {
  id: String
  access_token: String
  refresh_token: String
  reset_token: String
  isLoggedOut: Boolean
  expires_in: DateTime
  user_account_id: String
  user_account: CreateUserAccountInput
  created_at: DateTime
  updated_at: DateTime
}

input LoginUserAccountInput {
  user_account: String
  password: String
}

input ChangePasswordInput {
  old_password: String
  password: String
  confirm_password: String
}

input UpdateNoteInput {
  id: String
  name: String
  description: String
  logs: String
  user_account_id: String
  user_account: CreateUserAccountInput
  requestion_forms_id: DateTime
  created_at: DateTime
  updated_at: DateTime
}

input CreateRequestionFormCategoryInput {
  id: String
  name: String
  short_name: String
  requestion_forms: [CreateRequestFormInput!]
  user_verifier_id: String
  user_verifier: CreateUserInput
  created_at: DateTime
  updated_at: DateTime
}

input CreateRequestFormInput {
  id: String
  name: String
  description: String
  user_id: String
  requester: CreateUserInput
  items: [CreateItemInput!]
  approval_id: String
  approval: CreateApprovalInput
  status: String
  requestForm_category_id: String
  requestForm_category: CreateRequestionFormCategoryInput
  notes: [CreateNoteInput!]
  CheckOutRequestForm: CreateCheckOutRequestFormInput
  isVerified: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input CreateItemInput {
  id: String
  name: String
  description: String
  quantity: Float
  price: Float
  total_price: Float
  unit_of_measurement_id: String
  item_category_id: String
  supplier_id: String
  requestion_forms_id: String
  item_status: String
  created_at: DateTime
  updated_at: DateTime
}

input CreateApprovalInput {
  id: String
  name: String
  description: String
  user_approval_id: String
  user_approval: [CreateApprovalUserInput!]
  created_at: DateTime
  updated_at: DateTime
}

input CreateApprovalUserInput {
  id: String
  level: Int
  approver_id: String
  item_category_id: String
  approval_id: String
  created_at: DateTime
  updated_at: DateTime
}

input CreateCheckOutRequestFormInput {
  id: String
  requestion_forms_id: String
  requestion_forms: CreateRequestFormInput
  created_at: DateTime
  updated_at: DateTime
}

input UpdateRequestionFormCategoryInput {
  id: String
  name: String
  short_name: String
  requestion_forms: [CreateRequestFormInput!]
  user_verifier_id: String
  user_verifier: CreateUserInput
  created_at: DateTime
  updated_at: DateTime
}

input CreateSupplierInput {
  id: String
  name: String
  address: String
  contact_person: String
  contact_number: String
  email: String
  created_at: DateTime
  updated_at: DateTime
}

input UpdateSupplierInput {
  id: String
  name: String
  address: String
  contact_person: String
  contact_number: String
  email: String
  created_at: DateTime
  updated_at: DateTime
}

input CreateItemCategoryInput {
  id: String
  name: String
  description: String
  user_approval_id: String
  user_approval: CreateUserInput
  created_at: DateTime
  updated_at: DateTime
}

input UpdateItemCategoryInput {
  id: String
  name: String
  description: String
  user_approval_id: String
  user_approval: CreateUserInput
  created_at: DateTime
  updated_at: DateTime
}

input CreateUnitOfMeasurementInput {
  id: String
  name: String
  symbol: String
  base_unit: String
  conversion_factor: Int
  resutl_unit: String
  created_at: DateTime
  updated_at: DateTime
}

input UpdateUnitOfMeasurementInput {
  id: String
  name: String
  symbol: String
  base_unit: String
  conversion_factor: Int
  resutl_unit: String
  created_at: DateTime
  updated_at: DateTime
}

input UpdateApprovalInput {
  id: String
  name: String
  description: String
  user_approval_id: String
  user_approval: [CreateApprovalUserInput!]
  created_at: DateTime
  updated_at: DateTime
}

input UpdateApprovalUserInput {
  id: String
  level: Int
  approver_id: String
  item_category_id: String
  approval_id: String
  created_at: DateTime
  updated_at: DateTime
}

input UpdateCheckOutRequestFormInput {
  id: String
  requestion_forms_id: String
  requestion_forms: CreateRequestFormInput
  created_at: DateTime
  updated_at: DateTime
}

input UpdateRequestFormInput {
  id: String
  name: String
  description: String
  user_id: String
  requester: CreateUserInput
  items: [CreateItemInput!]
  approval_id: String
  approval: CreateApprovalInput
  status: String
  requestForm_category_id: String
  requestForm_category: CreateRequestionFormCategoryInput
  notes: [CreateNoteInput!]
  CheckOutRequestForm: CreateCheckOutRequestFormInput
  isVerified: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input UpdateItemInput {
  id: String
  name: String
  description: String
  quantity: Float
  price: Float
  total_price: Float
  unit_of_measurement_id: String
  item_category_id: String
  supplier_id: String
  requestion_forms_id: String
  item_status: String
  created_at: DateTime
  updated_at: DateTime
}

type Subscription {
  userCreated: User!
  companyAdded: Company!
  departmentAdded: Department!
  roleCreated: Role!
  requestionFormCategoryCreated: RequestionFormCategory!
  supplierCreated: Supplier!
  itemCategoryCreated: ItemCategory!
  unitOfMeasurementCreated: UnitOfMeasurement!
  approvalUserCreated: ApprovalUser!
  checkOutRequestFormCreated: CheckOutRequestForm!
  requestFormCreated: RequestForm!
}